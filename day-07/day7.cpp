#include <string>
#include <iostream>
#include <algorithm>
#include "intcode.hpp"



int main()
{
    std::string str = "3,8,1001,8,10,8,105,1,0,0,21,46,67,76,97,118,199,280,361,442,99999,3,9,1002,9,3,9,101,4,9,9,102,3,9,9,1001,9,3,9,1002,9,2,9,4,9,99,3,9,102,2,9,9,101,5,9,9,1002,9,2,9,101,2,9,9,4,9,99,3,9,101,4,9,9,4,9,99,3,9,1001,9,4,9,102,2,9,9,1001,9,4,9,1002,9,5,9,4,9,99,3,9,102,3,9,9,1001,9,2,9,1002,9,3,9,1001,9,3,9,4,9,99,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,99";

    int settings[] = {0,1,2,3,4};

    int max = 0;
    int input;

    do {
        input = 0;
        for (int i = 0; i < 5; i++) {
            auto machine = new IntCode(str);
            machine->Feed(settings[i]);
            machine->Feed(input);
            machine->Run();
            input = machine->Output();
            delete machine;
        }

        if (input > max) {
            max = input;
        }

    } while (std::next_permutation(settings, settings + 5));

    std::cout << "Part One: " << max << std::endl;


    int p2settings[] = {5,6,7,8,9};
    IntCode * machines[5];

    max = 0;
    do {
        for (int i = 0; i < 5; i++) {
            machines[i] = new IntCode(str);
            machines[i]->Feed(p2settings[i]);
        }
        machines[0]->Feed(0);

        bool exited;
        int lastoutput;
        do {
            exited = true;
            for (int i = 0; i < 5; i++) {
                if (!machines[i]->Run()) {
                    exited = false;
                }
                while (machines[i]->HasOutput()) {
                    int out = machines[i]->Output();
                    if (i == 4) {
                        lastoutput = out;
                    }
                    machines[(i+1)%5]->Feed(out);
                }
            }
        } while (!exited);

        if (lastoutput > max) {
            max = lastoutput;
        }

    } while (std::next_permutation(p2settings, p2settings + 5));

    std::cout << "Part Two: " << max << std::endl;

    return 0;
}